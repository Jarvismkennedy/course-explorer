{"version":3,"sources":["components/CourseGraph.js","components/GenerateGraphElements.js","Pages/Home.js","components/NavbarData.js","components/Navbar.js","components/GenerateDictionaries.js","Pages/GraphPage.js","index.js"],"names":["CourseModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","modalTitle","Body","modalDescription","split","map","line","Footer","Button","onClick","onHide","CourseGraph","useState","modalShow","setModalShow","setModalTitle","setModalDescription","onElementClick","element","undefined","srcElement","courseCode","innerText","courseName","courseDataDictionary","courseDescription","elements","course","allCourseDataDictionary","prerequisites","prerequisiteCourseCodes","slice","length","pop","newPrerequisiteList","newPrerequisiteListLength","index","push","fourthYearCourses","thirdYearCourses","secondYearCourses","firstYearCourses","fourthYearCoursesLength","thirdYearCoursesLength","secondYearCoursesLength","firstYearCoursesLength","dx","dy","type","connectable","data","label","position","x","y","prerequisiteList","prerequisiteListLength","source","target","animated","arrowHeadType","sourcePosition","targetPosition","GenerateGraphElements","show","className","Home","departmentData","title","path","icon","cName","MyNavBar","courseList","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Nav","Collapse","NavDropdown","Container","item","Item","setDepartmentName","departmentName","setCourse","existsPathToPrerequisite","prerequisiteCourseCode","indexOfPrerequisite","GrapPage","courseData","setCourseData","setCourseDataDictionary","useEffect","fetch","method","headers","body","JSON","stringify","then","response","a","json","courseDataLength","course_code","name","all_course_info","corequisiteCourseCodes","prerequisiteData","prerequisiteDataLength","prerequisite","corequisiteData","corequisiteDataLength","corequisite","corequisiteCourseCode","splice","GenerateDictionaries","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e22fd776.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactFlow, {ReactFlowProvider, Controls} from 'react-flow-renderer'\nimport {Modal, Button} from 'react-bootstrap';\nimport GenerateGraphElements from './GenerateGraphElements'\nimport './CourseGraph.css';\n\nfunction CourseModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.modalTitle}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n           {props.modalDescription.split('\\n').map( (line) => {\n             return <p> {line}</p>\n           })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n export default function CourseGraph(props){\n    const [modalShow, setModalShow] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [modalDescription, setModalDescription] = useState('')\n\n\n    const onElementClick = (element) => {\n        if (element.srcElement !== undefined){\n          let courseCode = element.srcElement.innerText;\n          let courseName = props.courseDataDictionary[courseCode].courseName;\n          let courseDescription = props.courseDataDictionary[courseCode].courseDescription;\n          setModalDescription(courseDescription)\n          setModalTitle (courseName)\n          setModalShow(true);\n        }     \n    }\n\n\n    const elements = GenerateGraphElements(props.course, props.courseDataDictionary);\n\n\n    const FlowWithProvider = () => (\n        \n        <ReactFlowProvider>\n        <ReactFlow elements={elements} onElementClick={onElementClick}>\n                <Controls/>\n        </ReactFlow>\n        </ReactFlowProvider>\n        );\n    \n    \n    const currentCourseLabel = () => {\n    if (props.course === undefined || props.course === 'All Courses'){\n        return ('All Courses');\n    } else{\n        return ( '(' + props.course + ') ' + props.courseDataDictionary[props.course].courseName);\n            \n      }\n    }\n\n    return (\n        <>\n            <CourseModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                modalTitle = {modalTitle}\n                modalDescription = {modalDescription}\n            />\n            <div className = 'tree'>\n                <div className = 'currentCourseLabel'>\n                    {currentCourseLabel()}\n                </div>\n                {FlowWithProvider()}\n            </div>\n        </>\n      );\n\n}\n\n","export default function generateGraphElements (course, allCourseDataDictionary){\n        \n    var courseDataDictionary = {};\n    if (course === undefined || course === 'All Courses'){\n        courseDataDictionary = allCourseDataDictionary;\n    }\n    else{\n        \n        courseDataDictionary[course] = allCourseDataDictionary[course];\n        var prerequisites = courseDataDictionary[course].prerequisiteCourseCodes.slice();\n        \n            while (prerequisites.length > 0){\n                let courseCode = prerequisites.pop();\n                courseDataDictionary[courseCode] = allCourseDataDictionary[courseCode];\n                \n                let newPrerequisiteList = allCourseDataDictionary[courseCode].prerequisiteCourseCodes;\n                let newPrerequisiteListLength = newPrerequisiteList.length;\n                for (let index = 0; index < newPrerequisiteListLength; index++){\n                    prerequisites.push(newPrerequisiteList[index])\n                }\n            } \n        }  \n\n    const fourthYearCourses = [];\n    const thirdYearCourses = [];\n    const secondYearCourses = [];\n    const firstYearCourses = [];\n\n    for (let courseCode in courseDataDictionary){\n        \n        if (courseCode[3] === '4'){\n            fourthYearCourses.push(courseCode)\n        }\n        else if (courseCode[3] === '3'){\n            thirdYearCourses.push(courseCode)\n        }\n        else if (courseCode[3] === '2'){\n            secondYearCourses.push(courseCode)\n        }\n        else {\n            firstYearCourses.push(courseCode)\n        }\n        \n    }\n   \n\n    const fourthYearCoursesLength = fourthYearCourses.length;\n    const thirdYearCoursesLength = thirdYearCourses.length;\n    const secondYearCoursesLength = secondYearCourses.length;\n    const firstYearCoursesLength = firstYearCourses.length;\n    const elements = []\n    var dx = 0;\n    var dy = 0;\n\n    for (let index = 0; index < fourthYearCoursesLength; index++){\n        if (dx > 7){\n            dx = 0;\n            dy++;\n        }\n\n        elements.push({\n            id: fourthYearCourses[index],\n            type: 'input',\n            connectable: false,\n            data: {label: fourthYearCourses[index]},\n            position: {x: 25 + dx*175, y: 25 + dy*100}\n        })\n        dx++;\n    }\n    dy++;\n\n    for (let index = 0; index < thirdYearCoursesLength; index++){\n        if (dx > 7){\n            dx = 0;\n            dy++;\n        }\n\n        elements.push({\n            id: thirdYearCourses[index],\n            type: 'input',\n            connectable: false,\n            data: {label: thirdYearCourses[index]},\n            position: {x: 25 + dx*175, y: 25 + dy*100}\n        })\n        dx++;\n    }\n    dy++;\n\n    for (let index = 0; index < secondYearCoursesLength; index++){\n        if (dx > 7){\n            dx = 0;\n            dy++;\n        }\n\n        elements.push({\n            id: secondYearCourses[index],\n            type: 'input',\n            connectable: false,\n            data: {label: secondYearCourses[index]},\n            position: {x: 25 + dx*175, y: 25 + dy*100}\n        })\n        dx++;\n    }\n    dy++;\n\n    for (let index = 0; index < firstYearCoursesLength; index++){\n        if (dx > 7){\n            dx = 0;\n            dy++;\n        }\n        \n        elements.push({\n            id: firstYearCourses[index],\n            type: 'input',\n            connectable: false,\n            data: {label: firstYearCourses[index]},\n            position: {x: 25 + dx*175, y: 25 + dy*100}\n        })\n        dx++;\n    }\n    for (let courseCode in courseDataDictionary){\n        let prerequisiteList = courseDataDictionary[courseCode].prerequisiteCourseCodes;\n        let prerequisiteListLength = prerequisiteList.length;\n        for (let index = 0; index < prerequisiteListLength; index++){\n            elements.push({\n                id: 'e' + prerequisiteList[index] + '-' + courseCode,\n                source: prerequisiteList[index],\n                target: courseCode,\n                animated: true,\n                arrowHeadType: 'arrowclosed',\n                sourcePosition: 'top',\n                targetPosition: 'bottom',\n            })\n        }\n        \n    }\n    return elements;\n}","import React from 'react';\nimport {RiFullscreenLine} from 'react-icons/ri'\nimport './Home.css'\n\nexport default function Home (){\n    return(\n        <div>\n            <ul className = 'instructions'>\n                <li>\n                    Select a department and optionally course from the drop down menus\n                </li>\n                <li>\n                    Control the prerequisite graph using the controls in the bottom left corner, or by scrolling / panning\n                    with your mouse. If the graph is not displayed correctly, recenter it using the fullscreen button  {<RiFullscreenLine className = 'fullscreenIcon'/>}\n                </li>\n                <li>\n                    You can drag the course nodes around to get a better view of the edges\n                </li>\n                <li>\n                    Click on a course to display the course name and description\n                </li>\n            </ul>\n        </div>\n        \n        \n    );\n}","import React from 'react';\nimport * as FaIcons from 'react-icons/fa'\nimport * as SiIcons from 'react-icons/si'\nimport * as GiIcons from 'react-icons/gi'\nimport * as IoIcons from 'react-icons/io5'\nimport * as MdIcons from 'react-icons/md'\nimport * as GrIcons from 'react-icons/gr'\nimport * as RiIcons from 'react-icons/ri'\nimport * as AiIcons from 'react-icons/ai'\nimport * as WiIcons from 'react-icons/wi'\nimport * as BiIcons from 'react-icons/bi'\nimport * as HiIcons from 'react-icons/hi'\nimport * as IoMdIcons from 'react-icons/io'\nimport * as BsIcons from 'react-icons/bs'\nimport * as GoIcons from 'react-icons/go'\nimport * as ImIcons from 'react-icons/im'\n\n\nexport const departmentData = [\n    {\n        title:'Anthropology',\n        path: '/Anthropology',\n        icon: <IoIcons.IoPeopleSharp/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Astronomy',\n        path: '/Astronomy',\n        icon: <IoIcons.IoPlanetSharp/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Biology',\n        path: '/Biology',\n        icon: <GiIcons.GiPlantWatering/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Biomedical Communications',\n        path: '/BiomedicalCommunications',\n        icon: <GiIcons.GiMedicines/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Chemistry',\n        path: '/ComputerScience',\n        icon: <GiIcons.GiChemicalDrop/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Cinema Studies',\n        path: '/CinemaStudies',\n        icon: <MdIcons.MdLocalMovies/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Classical Civilization',\n        path: '/ClassicalCivilization',\n        icon: <GiIcons.GiAncientRuins/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Communication, Culture, Information and Technology',\n        path: '/CommunicationCultureAndInformationTechnology',\n        icon: <GiIcons.GiMouse/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Computer Science',\n        path: '/ComputerScience',\n        icon: <RiIcons.RiComputerFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Criminology, Law and Society',\n        path: '/CriminologyLawAndSociety',\n        icon: <RiIcons.RiCriminalFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Diaspora and Transnational Studies',\n        path: '/DiasporaAndTransNationalStudies',\n        icon: <AiIcons.AiOutlineGlobal/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Drama',\n        path: '/Drama',\n        icon: <GiIcons.GiDramaMasks/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Earth Science',\n        path: '/EarthScience',\n        icon: <GiIcons.GiFallingRocks/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Economics',\n        path: '/Economics',\n        icon: <MdIcons.MdAttachMoney/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Education Studies',\n        path: '/EducationStudies',\n        icon: <GiIcons.GiTeacher/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'English',\n        path: '/English',\n        icon: <GiIcons.GiBookCover/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Environment',\n        path: '/Environment',\n        icon: <GiIcons.GiPineTree/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Environmental Geoscience',\n        path: '/EnvironmentalGeoscience',\n        icon: <WiIcons.WiDayRainWind/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Fine Art History',\n        path: '/FineArtHistory',\n        icon: <GiIcons.GiMonaLisa/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Fine Art Studio',\n        path: '/FineArtStudio',\n        icon: <MdIcons.MdBrush/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Forensic Science',\n        path: '/ForensicScience',\n        icon: <GiIcons.GiDna1/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'French',\n        path: '/French',\n        icon: <SiIcons.SiAirfrance/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Geography',\n        path: '/Geography',\n        icon: <FaIcons.FaMap/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'History',\n        path: '/History',\n        icon: <GiIcons.GiAncientSword/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'History of Religions',\n        path: '/HistoryOfReligions',\n        icon: <FaIcons.FaCross/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Institute for Management and Innovation',\n        path: '/InstituteForManagementAndInnovation',\n        icon: <HiIcons.HiOfficeBuilding/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Institute for the Study of University Pedagogy (ISUP)',\n        path: '/InstituteForTheStudyOfUniversityPedagogy',\n        icon: <FaIcons.FaUniversity/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Italian',\n        path: '/Italian',\n        icon: <IoMdIcons.IoMdPizza/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Language Studies',\n        path: '/LanguageStudies',\n        icon: <GiIcons.GiTalk/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Language Teaching and Learning: French and Italian (HBA)',\n        path: '/LanguageTeaching',\n        icon: <FaIcons.FaChalkboardTeacher/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Linguistics',\n        path: '/Linguistics',\n        icon: <RiIcons.RiKakaoTalkFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Management',\n        path: '/Management',\n        icon: <IoMdIcons.IoIosPaper/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Mathematics',\n        path: '/Mathematics',\n        icon: <SiIcons.SiWolframmathematica/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Philosophy',\n        path: '/Philosophy',\n        icon: <GiIcons.GiGreekTemple/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Physics',\n        path: '/Physics',\n        icon: <GiIcons.GiAtom/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Political Science',\n        path: '/PoliticalScience',\n        icon: <FaIcons.FaFlagUsa/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Psychology',\n        path: '/Psychology',\n        icon: <RiIcons.RiPsychotherapyFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Sociology',\n        path: '/Sociology',\n        icon: <BsIcons.BsFillPeopleFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'South Asian Humanities',\n        path: '/SouthAsianHumanities',\n        icon: <GiIcons.GiAsianLantern/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Statistics',\n        path: '/Statistics',\n        icon: <GoIcons.GoGraph/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Visual Culture and Communication',\n        path: '/VisualCultureAndCommunication',\n        icon: <GiIcons.GiFishMonster/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Women and Gender Studies',\n        path: '/WomenAndGenderStudies',\n        icon: <ImIcons.ImWoman/>,\n        cName: 'nav-text',\n    },\n\n]","import React from 'react';\nimport {Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\nimport {departmentData} from './NavbarData';\nimport './Navbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default function MyNavBar(props){\n    const courseDataDictionary = props.courseDataDictionary;\n    const courseList = [{courseCode: 'All Courses', courseName: 'All Courses'}];\n    for (let courseCode in courseDataDictionary){\n        courseList.push({courseCode: courseCode, courseName: courseDataDictionary[courseCode].courseName})\n    }\n    \n    return (\n        <>\n        \n        <Navbar expand = 'lg' bg = 'dark' variant = 'dark' className = 'navbar-colors'>\n                <Navbar.Brand className = 'title'>\n                    UTM Course Explorer\n                </Navbar.Brand> \n                <Navbar.Toggle aria-controls = 'department' />\n                <Navbar.Toggle aria-controls = 'course'/>\n\n                <Nav className = 'mr-auto'>\n                <Navbar.Collapse id = 'department'>\n                        <NavDropdown title = 'Department' id = 'basic-nav-dropdown'>\n                            <Container className = 'nav-dropdown navbar-colors'>\n                                {departmentData.map( (item) => \n                                    <NavDropdown.Item key = {item.title} onClick = { () => {   \n                                        props.setDepartmentName({departmentName: item.title});\n                                        props.setCourse({course: 'All Courses'})\n                                    }}>\n                                        <span className = 'icon'>{item.icon}</span>\n                                        <span>{item.title}</span>\n                                    </NavDropdown.Item>\n                                )}\n                            </Container>\n                        </NavDropdown>\n                    \n                </Navbar.Collapse>\n\n                <Navbar.Collapse id = 'course'>\n                    <Nav className = 'mr-auto'>\n                    <NavDropdown title = 'Course' id = 'basic-nav-dropdown'>\n                            <Container className = 'nav-dropdown navbar-colors'>\n                                {courseList.map( (item) => \n                                    <NavDropdown.Item key = {item.courseCode} onClick = { () => {   \n                                        props.setCourse({course: item.courseCode})\n                                    }}>\n                                        {'(' + item.courseCode + ') ' + item.courseName}\n                                    </NavDropdown.Item>\n                                )}\n                            </Container>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n                </Nav>\n        </Navbar>\n        \n        </>\n        \n    )\n}","export default function GenerateDictionaries(props){\n\n  var index = 0;\n  var courseDataDictionary = {};\n\n  if (props.courseData !== undefined){\n    \n    const courseDataLength = props.courseData.length\n    for (index; index < courseDataLength; index++){\n      const course = props.courseData[index];\n      if (!(course.course_code in courseDataDictionary)){\n          courseDataDictionary[course.course_code] = {\n          courseName: course.name, \n          courseCode: course.course_code, \n          courseDescription: course.all_course_info,\n          prerequisiteCourseCodes: [],\n          corequisiteCourseCodes: []\n        }\n      }\n    }\n  }\n\n  if (props.prerequisiteData !== undefined){\n\n    const prerequisiteDataLength = props.prerequisiteData.length;\n    for (index = 0; index < prerequisiteDataLength; index++){\n\n      const prerequisite = props.prerequisiteData[index];\n      if (!(prerequisite.prerequisiteCourseCode in courseDataDictionary)){\n          courseDataDictionary[prerequisite.prerequisiteCourseCode] = {\n          courseName : prerequisite.name,\n          courseCode : prerequisite.prerequisiteCourseCode,\n          courseDescription : prerequisite.all_course_info,\n          prerequisiteCourseCodes: [],\n          corequisiteCourseCodes: []\n        }\n      }\n      \n      courseDataDictionary[prerequisite.course_code].prerequisiteCourseCodes.push(prerequisite.prerequisiteCourseCode);\n    }\n  }\n\n  if (props.corequisiteData !== undefined){\n\n    const corequisiteDataLength = props.corequisiteData.length;\n    for (index = 0; index < corequisiteDataLength; index++){\n\n      const corequisite = props.corequisiteData[index];\n      if (!(corequisite.corequisiteCourseCode in courseDataDictionary)){\n          courseDataDictionary[corequisite.corequisiteCourseCode] = {\n          courseName : corequisite.name,\n          courseCode : corequisite.course_code,\n          courseDescription : corequisite.all_course_info,\n          prerequisiteCourseCodes: [],\n          corequisiteCourseCodes: []\n\n        }\n      }\n      courseDataDictionary[corequisite.course_code].corequisiteCourseCodes.push(corequisite.corequisiteCourseCode);\n    }\n  }\n\n  // remove the prerequisite if it appears in a path through other courses\n\n  for (let courseCode in courseDataDictionary){\n    let prerequisiteList = courseDataDictionary[courseCode].prerequisiteCourseCodes;\n    let prerequisiteListLength = prerequisiteList.length;\n    for (let index = 0; index < prerequisiteListLength; index++){\n      let prerequisiteCourseCode = prerequisiteList[index];\n      if (existsPathToPrerequisite(courseDataDictionary, prerequisiteCourseCode, courseCode, index)){\n        prerequisiteList.splice(index, 1);\n        index--;\n        prerequisiteListLength--; \n      }\n    }\n  }\n  props.setCourseDataDictionary(courseDataDictionary);\n}\n\n\n// function to search the graph for a path an alternate path to the prerequisite\nfunction existsPathToPrerequisite (courseDataDictionary, prerequisiteCourseCode, courseCode, indexOfPrerequisite){\n  let prerequisiteList = courseDataDictionary[courseCode].prerequisiteCourseCodes;\n  let prerequisiteListLength = prerequisiteList.length;\n\n  if (prerequisiteCourseCode === courseCode){\n    return true;\n  }\n  for (let index = 0; index < prerequisiteListLength; index++){\n    if(index !== indexOfPrerequisite){\n      let newCourseCode = prerequisiteList[index];\n      let newIndexOfPrerequisite = index;\n      let existsPath = existsPathToPrerequisite(courseDataDictionary, prerequisiteCourseCode, newCourseCode, newIndexOfPrerequisite);\n      if (existsPath){\n        return true;\n      }\n    }\n  }\n  return false;\n}","import CourseGraph from '../components/CourseGraph';\nimport Home from './Home'\nimport MyNavbar from '../components/Navbar';\nimport GenerateDictionaries from '../components/GenerateDictionaries';\nimport React, {useState, useEffect} from 'react';\n\nimport './GraphPage.css';\n\nexport default function GrapPage() {\n  const [departmentName,setDepartmentName] = useState('');\n  const [course, setCourse] = useState('All Courses');\n  const [courseData, setCourseData] = useState({});\n  const [courseDataDictionary, setCourseDataDictionary] = useState({});\n\n\n\n  useEffect(() => {\n    fetch('/api', {\n        method: 'POST',\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify(departmentName),\n    }).then(async (response) => {\n        let data = await response.json();\n        setCourseData(data);\n        })\n  }, [departmentName])\n\n\n  useEffect( () => {\n    GenerateDictionaries({\n      courseData: courseData.courseData, \n      prerequisiteData: courseData.prerequisiteData,\n      corequisiteData: courseData.corequisiteData,\n      setCourseDataDictionary,\n    });\n  }, [courseData])\n\n  function mainContent() {\n    if(departmentName!== ''){\n      return (\n        <CourseGraph\n          courseDataDictionary = {courseDataDictionary} \n          departmentName = {departmentName.departmentName}\n          course = {course.course}\n        />\n      );\n    }\n    return(\n      <Home/>\n    );\n  }\n\n\n  return (\n    \n    <>\n      <MyNavbar \n      setDepartmentName = {setDepartmentName} \n      setCourse = {setCourse}\n      courseDataDictionary = {courseDataDictionary}\n      />\n\n      <div className = 'currentDepartmentLabel'>\n        {departmentName.departmentName}\n      </div>\n\n      {mainContent()}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GraphPage from './Pages/GraphPage';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GraphPage />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}
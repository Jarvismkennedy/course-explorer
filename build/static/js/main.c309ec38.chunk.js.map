{"version":3,"sources":["components/GenerateGraphElements.js","components/CourseGraph.js","components/Home.js","components/NavbarData.js","components/Navbar.js","components/GenerateDictionaries.js","App.js","index.js"],"names":["generateGraphElements","course","allCourseDataDictionary","courseDataDictionary","undefined","prerequisites","prerequisiteCourseCodes","slice","length","courseCode","pop","newPrerequisiteList","newPrerequisiteListLength","index","push","generateCourseDataDictionaryForSelectedCourse","courseDictionaryByYear","year","console","log","generateCourseDictionaryByYear","elements","dx","dy","courseList","courseListLength","id","type","connectable","data","label","position","x","y","prerequisiteList","prerequisiteListLength","source","target","animated","arrowHeadType","sourcePosition","targetPosition","CourseModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","modalTitle","Body","modalDescription","split","map","line","Footer","Button","onClick","onHide","CourseGraph","useState","modalShow","setModalShow","setModalTitle","setModalDescription","onElementClick","element","srcElement","innerText","courseName","courseDescription","GenerateGraphElements","show","className","Home","departmentData","title","path","icon","cName","MyNavBar","Navbar","expand","bg","variant","Brand","Toggle","aria-controls","Nav","Collapse","NavDropdown","Container","item","Item","setDepartmentName","departmentName","setCourse","existsPathToPrerequisite","prerequisiteCourseCode","sourceCourseCode","indexOfPrerequisite","App","courseData","setCourseData","setCourseDataDictionary","useEffect","fetch","method","headers","body","JSON","stringify","then","response","a","json","courseDataLength","course_code","name","all_course_info","prerequisiteData","prerequisiteDataLength","prerequisite","splice","GenerateDictionaries","corequisiteData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c309ec38.chunk.js","sourcesContent":["function generateCourseDataDictionaryForSelectedCourse(course, allCourseDataDictionary){\n    var courseDataDictionary = {};\n    if (course === undefined || course === 'All Courses'){\n        courseDataDictionary = allCourseDataDictionary;\n    }\n    else{\n        courseDataDictionary[course] = allCourseDataDictionary[course];\n        var prerequisites = courseDataDictionary[course].prerequisiteCourseCodes.slice();\n            while (prerequisites.length > 0){\n                let courseCode = prerequisites.pop();\n                courseDataDictionary[courseCode] = allCourseDataDictionary[courseCode];\n                let newPrerequisiteList = allCourseDataDictionary[courseCode].prerequisiteCourseCodes;\n                let newPrerequisiteListLength = newPrerequisiteList.length;\n                for (let index = 0; index < newPrerequisiteListLength; index++){\n                    prerequisites.push(newPrerequisiteList[index])\n                }\n            } \n    }  \n    return courseDataDictionary;\n}\nfunction generateCourseDictionaryByYear (courseDataDictionary){\n    const courseDictionaryByYear = {\n        '1': [],\n        '2': [],\n        '3': [],\n        '4': []\n    }\n    for (let courseCode in courseDataDictionary){\n        // CourseCodes are of the form MAT137H5, where the digit at the third index represents the course year\n        const year = courseCode[3];\n        if (year === 'r'){\n            console.log(courseCode);\n        }\n        courseDictionaryByYear[year].push(courseCode);\n    }\n    return courseDictionaryByYear;\n}\n\nexport default function generateGraphElements (course, allCourseDataDictionary){\n    const courseDataDictionary = generateCourseDataDictionaryForSelectedCourse(course, allCourseDataDictionary);\n    const courseDictionaryByYear = generateCourseDictionaryByYear(courseDataDictionary);\n    const elements = []\n    var dx = 0;\n    var dy = 0;\n\n    for (let year in courseDictionaryByYear){\n        let courseList = courseDictionaryByYear[year];\n        let courseListLength = courseDictionaryByYear[year].length\n        for(let index = 0; index < courseListLength; index++){\n            if (dx > 7){\n                dx = 0;\n                dy++;\n            }\n            elements.push({\n                id: courseList[index],\n                type: 'input',\n                connectable: false,\n                data: {label: courseList[index]},\n                position: {x: 25+dx*175, y: 25+dy*100}\n            })\n            dx++;\n        }\n        dy++\n    }\n    for (let courseCode in courseDataDictionary){\n        let prerequisiteList = courseDataDictionary[courseCode].prerequisiteCourseCodes;\n        let prerequisiteListLength = prerequisiteList.length;\n        for (let index = 0; index < prerequisiteListLength; index++){\n            elements.push({\n                id: 'e' + prerequisiteList[index] + '-' + courseCode,\n                source: prerequisiteList[index],\n                target: courseCode,\n                animated: true,\n                arrowHeadType: 'arrowclosed',\n                sourcePosition: 'top',\n                targetPosition: 'bottom',\n            })\n        }\n    }\n    return elements;\n}","import React, {useState} from 'react';\nimport ReactFlow, {ReactFlowProvider, Controls} from 'react-flow-renderer'\nimport {Modal, Button} from 'react-bootstrap';\nimport GenerateGraphElements from './GenerateGraphElements'\nimport './CourseGraph.css';\n\nfunction CourseModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {props.modalTitle}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          \n           {props.modalDescription.split('\\n').map( (line) => {\n             return <p> {line}</p>\n           })}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n export default function CourseGraph(props){\n    const [modalShow, setModalShow] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [modalDescription, setModalDescription] = useState('')\n\n\n    const onElementClick = (element) => {\n        if (element.srcElement !== undefined){\n          let courseCode = element.srcElement.innerText;\n          let courseName = props.courseDataDictionary[courseCode].courseName;\n          let courseDescription = props.courseDataDictionary[courseCode].courseDescription;\n          setModalDescription(courseDescription)\n          setModalTitle (courseName)\n          setModalShow(true);\n        }     \n    }\n\n\n    const elements = GenerateGraphElements(props.course, props.courseDataDictionary);\n\n\n    const FlowWithProvider = () => (\n        \n        <ReactFlowProvider>\n        <ReactFlow elements={elements} onElementClick={onElementClick}>\n                <Controls/>\n        </ReactFlow>\n        </ReactFlowProvider>\n        );\n    \n    \n    const currentCourseLabel = () => {\n    if (props.course === undefined || props.course === 'All Courses'){\n        return ('All Courses');\n    } else{\n        return ( '(' + props.course + ') ' + props.courseDataDictionary[props.course].courseName);\n            \n      }\n    }\n\n    return (\n        <>\n            <CourseModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                modalTitle = {modalTitle}\n                modalDescription = {modalDescription}\n            />\n            <div className = 'courseGraph'>\n                <div className = 'currentCourseLabel'>\n                    {currentCourseLabel()}\n                </div>\n                {FlowWithProvider()}\n            </div>\n        </>\n      );\n\n}\n\n","import React from 'react';\nimport {RiFullscreenLine} from 'react-icons/ri'\nimport './Home.css'\n\nexport default function Home (){\n    return(\n        <div>\n            <ul className = 'instructions'>\n                <li>\n                    Select a department and optionally a course from the drop down menus\n                </li>\n                <li>\n                    Control the prerequisite graph using the controls in the bottom left corner, or by scrolling / panning\n                    with your mouse. If the graph is not displayed correctly, recenter it using the fullscreen button  {<RiFullscreenLine className = 'fullscreenIcon'/>}\n                </li>\n                <li>\n                    You can drag the course nodes around to get a better view of the edges\n                </li>\n                <li>\n                    Click on a course to display the course name and description\n                </li>\n            </ul>\n        </div>\n        \n        \n    );\n}","import React from 'react';\nimport * as FaIcons from 'react-icons/fa'\nimport * as SiIcons from 'react-icons/si'\nimport * as GiIcons from 'react-icons/gi'\nimport * as IoIcons from 'react-icons/io5'\nimport * as MdIcons from 'react-icons/md'\nimport * as RiIcons from 'react-icons/ri'\nimport * as AiIcons from 'react-icons/ai'\nimport * as WiIcons from 'react-icons/wi'\nimport * as HiIcons from 'react-icons/hi'\nimport * as IoMdIcons from 'react-icons/io'\nimport * as BsIcons from 'react-icons/bs'\nimport * as GoIcons from 'react-icons/go'\nimport * as ImIcons from 'react-icons/im'\n\n\nexport const departmentData = [\n    {\n        title:'Anthropology',\n        path: '/Anthropology',\n        icon: <IoIcons.IoPeopleSharp/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Astronomy',\n        path: '/Astronomy',\n        icon: <IoIcons.IoPlanetSharp/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Biology',\n        path: '/Biology',\n        icon: <GiIcons.GiPlantWatering/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Biomedical Communications',\n        path: '/BiomedicalCommunications',\n        icon: <GiIcons.GiMedicines/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Chemistry',\n        path: '/ComputerScience',\n        icon: <GiIcons.GiChemicalDrop/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Cinema Studies',\n        path: '/CinemaStudies',\n        icon: <MdIcons.MdLocalMovies/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Classical Civilization',\n        path: '/ClassicalCivilization',\n        icon: <GiIcons.GiAncientRuins/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Communication, Culture, Information and Technology',\n        path: '/CommunicationCultureAndInformationTechnology',\n        icon: <GiIcons.GiMouse/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Computer Science',\n        path: '/ComputerScience',\n        icon: <RiIcons.RiComputerFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Criminology, Law and Society',\n        path: '/CriminologyLawAndSociety',\n        icon: <RiIcons.RiCriminalFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Diaspora and Transnational Studies',\n        path: '/DiasporaAndTransNationalStudies',\n        icon: <AiIcons.AiOutlineGlobal/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Drama',\n        path: '/Drama',\n        icon: <GiIcons.GiDramaMasks/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Earth Science',\n        path: '/EarthScience',\n        icon: <GiIcons.GiFallingRocks/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Economics',\n        path: '/Economics',\n        icon: <MdIcons.MdAttachMoney/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Education Studies',\n        path: '/EducationStudies',\n        icon: <GiIcons.GiTeacher/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'English',\n        path: '/English',\n        icon: <GiIcons.GiBookCover/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Environment',\n        path: '/Environment',\n        icon: <GiIcons.GiPineTree/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Environmental Geoscience',\n        path: '/EnvironmentalGeoscience',\n        icon: <WiIcons.WiDayRainWind/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Fine Art History',\n        path: '/FineArtHistory',\n        icon: <GiIcons.GiMonaLisa/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Fine Art Studio',\n        path: '/FineArtStudio',\n        icon: <MdIcons.MdBrush/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Forensic Science',\n        path: '/ForensicScience',\n        icon: <GiIcons.GiDna1/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'French',\n        path: '/French',\n        icon: <SiIcons.SiAirfrance/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Geography',\n        path: '/Geography',\n        icon: <FaIcons.FaMap/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'History',\n        path: '/History',\n        icon: <GiIcons.GiAncientSword/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'History of Religions',\n        path: '/HistoryOfReligions',\n        icon: <FaIcons.FaCross/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Institute for Management and Innovation',\n        path: '/InstituteForManagementAndInnovation',\n        icon: <HiIcons.HiOfficeBuilding/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Institute for the Study of University Pedagogy (ISUP)',\n        path: '/InstituteForTheStudyOfUniversityPedagogy',\n        icon: <FaIcons.FaUniversity/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Italian',\n        path: '/Italian',\n        icon: <IoMdIcons.IoMdPizza/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Language Studies',\n        path: '/LanguageStudies',\n        icon: <GiIcons.GiTalk/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Language Teaching and Learning: French and Italian (HBA)',\n        path: '/LanguageTeaching',\n        icon: <FaIcons.FaChalkboardTeacher/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Linguistics',\n        path: '/Linguistics',\n        icon: <RiIcons.RiKakaoTalkFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Management',\n        path: '/Management',\n        icon: <IoMdIcons.IoIosPaper/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Mathematics',\n        path: '/Mathematics',\n        icon: <SiIcons.SiWolframmathematica/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Philosophy',\n        path: '/Philosophy',\n        icon: <GiIcons.GiGreekTemple/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Physics',\n        path: '/Physics',\n        icon: <GiIcons.GiAtom/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Political Science',\n        path: '/PoliticalScience',\n        icon: <FaIcons.FaFlagUsa/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Psychology',\n        path: '/Psychology',\n        icon: <RiIcons.RiPsychotherapyFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Sociology',\n        path: '/Sociology',\n        icon: <BsIcons.BsFillPeopleFill/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'South Asian Humanities',\n        path: '/SouthAsianHumanities',\n        icon: <GiIcons.GiAsianLantern/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Statistics',\n        path: '/Statistics',\n        icon: <GoIcons.GoGraph/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Visual Culture and Communication',\n        path: '/VisualCultureAndCommunication',\n        icon: <GiIcons.GiFishMonster/>,\n        cName: 'nav-text',\n    },\n    {\n        title:'Women and Gender Studies',\n        path: '/WomenAndGenderStudies',\n        icon: <ImIcons.ImWoman/>,\n        cName: 'nav-text',\n    },\n\n]","import React from 'react';\nimport {Navbar, Nav, NavDropdown, Container} from 'react-bootstrap'\nimport {departmentData} from './NavbarData';\nimport './Navbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nexport default function MyNavBar(props){\n    const courseDataDictionary = props.courseDataDictionary;\n    const courseList = [{courseCode: 'All Courses', courseName: 'All Courses'}];\n    for (let courseCode in courseDataDictionary){\n        courseList.push({courseCode: courseCode, courseName: courseDataDictionary[courseCode].courseName})\n    }\n    \n    return (\n        <>\n        \n        <Navbar expand = 'lg' bg = 'dark' variant = 'dark' className = 'navbar-colors'>\n                <Navbar.Brand className = 'title'>\n                    UTM Course Explorer\n                </Navbar.Brand> \n                <Navbar.Toggle aria-controls = 'department' />\n                <Navbar.Toggle aria-controls = 'course'/>\n\n                <Nav className = 'mr-auto'>\n                <Navbar.Collapse id = 'department'>\n                        <NavDropdown title = 'Department' id = 'basic-nav-dropdown'>\n                            <Container className = 'nav-dropdown navbar-colors'>\n                                {departmentData.map( (item) => \n                                    <NavDropdown.Item key = {item.title} onClick = { () => {   \n                                        props.setDepartmentName({departmentName: item.title});\n                                        props.setCourse({course: 'All Courses'})\n                                    }}>\n                                        <span className = 'icon'>{item.icon}</span>\n                                        <span>{item.title}</span>\n                                    </NavDropdown.Item>\n                                )}\n                            </Container>\n                        </NavDropdown>\n                    \n                </Navbar.Collapse>\n\n                <Navbar.Collapse id = 'course'>\n                    <Nav className = 'mr-auto'>\n                    <NavDropdown title = 'Course' id = 'basic-nav-dropdown'>\n                            <Container className = 'nav-dropdown navbar-colors'>\n                                {courseList.map( (item) => \n                                    <NavDropdown.Item key = {item.courseCode} onClick = { () => {   \n                                        props.setCourse({course: item.courseCode})\n                                    }}>\n                                        {'(' + item.courseCode + ') ' + item.courseName}\n                                    </NavDropdown.Item>\n                                )}\n                            </Container>\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n                </Nav>\n        </Navbar>\n        \n        </>\n        \n    )\n}","export default function GenerateDictionaries(props){\n\n  var index = 0;\n  var courseDataDictionary = {};\n\n  if (props.courseData !== undefined){\n    \n    const courseDataLength = props.courseData.length\n    for (index; index < courseDataLength; index++){\n      const course = props.courseData[index];\n      if (!(course.course_code in courseDataDictionary)){\n          courseDataDictionary[course.course_code] = {\n          courseName: course.name, \n          courseCode: course.course_code, \n          courseDescription: course.all_course_info,\n          prerequisiteCourseCodes: [],\n        }\n      }\n    }\n  }\n\n  if (props.prerequisiteData !== undefined){\n\n    const prerequisiteDataLength = props.prerequisiteData.length;\n    for (index = 0; index < prerequisiteDataLength; index++){\n\n      const prerequisite = props.prerequisiteData[index];\n      if (!(prerequisite.prerequisiteCourseCode in courseDataDictionary)){\n          courseDataDictionary[prerequisite.prerequisiteCourseCode] = {\n          courseName : prerequisite.name,\n          courseCode : prerequisite.prerequisiteCourseCode,\n          courseDescription : prerequisite.all_course_info,\n          prerequisiteCourseCodes: [],\n        }\n      }\n      \n      courseDataDictionary[prerequisite.course_code].prerequisiteCourseCodes.push(prerequisite.prerequisiteCourseCode);\n    }\n  }\n\n  // Remove prerequisite if it appears in a path through other courses. \n  // E.g. if MAT102 -> MAT224 -> MAT337, and MAT102 -> MAT337, then remove MAT102 from the \n  // MAT337 prerequisite list\n  for (let courseCode in courseDataDictionary){\n    let prerequisiteList = courseDataDictionary[courseCode].prerequisiteCourseCodes;\n    let prerequisiteListLength = prerequisiteList.length;\n    for (let index = 0; index < prerequisiteListLength; index++){\n      let prerequisiteCourseCode = prerequisiteList[index];\n      if (existsPathToPrerequisite(courseDataDictionary, prerequisiteCourseCode, courseCode, index)){\n        prerequisiteList.splice(index, 1);\n        index--;\n        prerequisiteListLength--; \n      }\n    }\n  }\n  props.setCourseDataDictionary(courseDataDictionary);\n}\n\n\n\nfunction existsPathToPrerequisite (courseDataDictionary, prerequisiteCourseCode, sourceCourseCode, indexOfPrerequisite){\n  let prerequisiteList = courseDataDictionary[sourceCourseCode].prerequisiteCourseCodes;\n  let prerequisiteListLength = prerequisiteList.length;\n  if (prerequisiteCourseCode === sourceCourseCode){\n    return true;\n  }\n  for (let index = 0; index < prerequisiteListLength; index++){\n    if(index !== indexOfPrerequisite){\n      let newCourseCode = prerequisiteList[index];\n      let newIndexOfPrerequisite = index;\n      let existsPath = existsPathToPrerequisite(courseDataDictionary, prerequisiteCourseCode, newCourseCode, newIndexOfPrerequisite);\n      if (existsPath){\n        return true;\n      }\n    }\n  }\n  return false;\n}","import CourseGraph from './components/CourseGraph';\nimport Home from './components/Home'\nimport MyNavbar from './components/Navbar';\nimport GenerateDictionaries from './components/GenerateDictionaries';\nimport React, {useState, useEffect} from 'react';\n\nimport './App.css';\n\nexport default function App() {\n  const [departmentName,setDepartmentName] = useState('Home');\n  const [course, setCourse] = useState('All Courses');\n  const [courseData, setCourseData] = useState({});\n  const [courseDataDictionary, setCourseDataDictionary] = useState({});\n\n  useEffect(() => {\n    fetch('/api', {\n        method: 'POST',\n        headers: {'content-type': 'application/json'},\n        body: JSON.stringify(departmentName),\n    }).then(async (response) => {\n        let data = await response.json();\n        setCourseData(data);\n        })\n  }, [departmentName])\n\n  useEffect( () => {\n    GenerateDictionaries({\n      courseData: courseData.courseData, \n      prerequisiteData: courseData.prerequisiteData,\n      corequisiteData: courseData.corequisiteData,\n      setCourseDataDictionary,\n    });\n  }, [courseData])\n\n  function mainContent() {\n    if(departmentName === 'Home'){\n      return(\n        <Home/>\n      );\n    }\n    return (\n      <CourseGraph\n        courseDataDictionary = {courseDataDictionary} \n        departmentName = {departmentName.departmentName}\n        course = {course.course}\n      />\n    );\n  }\n\n  return (\n    \n    <>\n      <MyNavbar \n      setDepartmentName = {setDepartmentName} \n      setCourse = {setCourse}\n      courseDataDictionary = {courseDataDictionary}\n      />\n\n      <div className = 'currentDepartmentLabel'>\n        {departmentName.departmentName}\n      </div>\n\n      {mainContent()}\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}